#!/bin/bash
# --------------------------------------------------------------------------
# This script installs files and services specific to this project.
#
# Author: Bernhard Bablok
# License: GPL3
#
# Website: https://github.com/bablokb/simple-dab-radio
#
# --------------------------------------------------------------------------

PACKAGES="python3-evdev"
PACKAGES_PIP=""
PROJECT="simple-dab-radio"

# --- basic packages   ------------------------------------------------------

check_packages() {
  local p
  for p in "$@"; do
    echo -en "Checking $p ... " >&2
    dpkg -s "$p" 2>/dev/null | grep -q "Status.*ok" || return 0
    echo "ok" >&2
  done
  return 1
}

get_new_packages() {
  local p packages
  for p in "$@"; do
    echo -en "Checking $p ... " >&2
    if dpkg -s "$p" 2>/dev/null | grep -q "Status.*ok"; then
      echo "ok" >&2
    else
      echo "not installed" >&2
      packages+=" $p"
    fi
  done
  echo "$packages"
}

install_packages() {
  new_packages=$(get_new_packages $PACKAGES)
  if [ -n "$new_packages" ]; then
    echo -e "[INFO] installing additional packages" 2>&1
    apt-get update
    apt-get -y --no-upgrade install $new_packages
  fi

  # install PIP3 packages
  [ -n "$PACKAGES_PIP" ] && pip3 --disable-pip-version-check install $PACKAGES_PIP
}

# --- install specific files   ----------------------------------------------

install_files() {
  echo -e "[INFO] installing project files" 2>&1

  for f in `find $(dirname "$0")/../files/ -type f -not -name "*.pyc"`; do
    target="${f#*files}"
    target_dir="${target%/*}"
    [ ! -d "$target_dir" ] && mkdir -p "$target_dir"
    cp "$f" "$target"
    chown root:root "$target"
  done
  chmod 755 "/usr/local/sbin/$PROJECT.py"
}

# --- configure system   ----------------------------------------------------

configure_system() {
  local reboot=""
  if ! grep -q "^dtoverlay=rotary-encoder" /boot/config.txt ; then
    echo -e "[INFO] configuring rotary-encoder in /boot/config.txt" 2>&1
    echo "dtoverlay=rotary-encoder,pin_a=17,pin_b=27,relative_axis=1" >> /boot/config.txt
    echo "dtoverlay=gpio-key,gpio=22,keycode=28,label=\"PUSH\"" >> /boot/config.txt
    reboot="yes"
  fi

  if [ -n "$reboot" ]; then
    echo -e "[INFO] reboot the system to activate the changes" 2>&1
  fi
}

# --- activate service   ----------------------------------------------------

enable_services() {
  echo -e "[INFO] enabeling $PROJECT.service" 2>&1
  systemctl enable "$PROJECT.service"
}

# --- main program   --------------------------------------------------------

install_packages

install_files
configure_system
enable_services

echo "[INFO] installation completed"
